{"version":3,"sources":["super-res.min.js","/source/super-res.js","/source/src/ResourceAction.js","/source/src/super-res.js","/source/src/actionDefaults.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","require","define","amd","superRes","Q","superagent","Route","this","applyResponseTransforms","transforms","response","reduceRight","memo","transform","header","body","applyRequestTransforms","request","data","generateDefaultActions","url","defaultParams","resource","action","ResourceAction","super_res__assign","actionDefaults","get","makeRequest","bind","query","method","save","put","remove","responseType","transformRequest","transformResponse","ResourceAction_js__assign","config","route","value","params","toLowerCase","currentRequest","reverse","accept","headers","set","timeout","clearTimeout","send","_this","deferred","defer","console","log","buildRequest","end","err","res","reject","resolve","promise","super_res__superRes","actions","getOwnPropertyNames","forEach","name","promiseWrapper","promiseObj","proxiedResource","actionFunction","_len","arguments","args","Array","_key","apply","when","super_res"],"mappings":"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","file":"super-res.min.js","sourcesContent":[null,"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('q'), require('superagent'), require('route-parser')) :\n  typeof define === 'function' && define.amd ? define(['q', 'superagent', 'route-parser'], factory) :\n  global.superRes = factory(global.Q, global.superagent, global.Route)\n}(this, function (Q, superagent, Route) { 'use strict';\n\n  var actionDefaults = actionDefaults = {\n    method: 'GET',\n    responseType: 'json',\n    transformRequest: [],\n    transformResponse: []\n  };\n\n  var ResourceAction_js__assign = ResourceAction_js__assign || require('object.assign');\n\n  function applyResponseTransforms(transforms, response) {\n    return transforms.reduceRight(function (memo, transform) {\n      return transform(memo, response.header);\n    }, response.body);\n  }\n\n  function applyRequestTransforms(transforms, request, data) {\n    return transforms.reduceRight(function (memo, transform) {\n      return transform(memo, request.header);\n    }, data);\n  }\n\n  class ResourceAction {\n    constructor(url, defaultParams, action) {\n      this.config = ResourceAction_js__assign({url: url}, actionDefaults, action);\n      this.route = new Route(this.config.url);\n      this.defaultParams = defaultParams;\n    }\n    buildRequest(params, data) {\n      let method = this.config.method.toLowerCase();\n      let currentRequest = superagent[method === 'delete' ? 'del' : method](this.route.reverse(params));\n\n      currentRequest = currentRequest.accept(this.config.responseType);\n      if (this.config.headers) {\n        currentRequest = currentRequest.set(this.config.headers);\n      }\n\n      if (this.config.timeout) {\n        currentRequest.timeout(this.config.timeout);\n      } else {\n        currentRequest.clearTimeout();\n      }\n\n      if (data && method === 'get') {\n        currentRequest = currentRequest.query(applyRequestTransforms(this.config.transformRequest, currentRequest, data));\n      } else if (data) {\n        currentRequest = currentRequest.send(applyRequestTransforms(this.config.transformRequest, currentRequest, data));\n      }\n\n      return currentRequest;\n    }\n    makeRequest(params, data) {\n      let deferred = Q.defer();\n\n      console.log(superagent);\n      this.buildRequest(ResourceAction_js__assign({}, this.defaultParams, params), data)\n        .end((err, res) => {\n          console.log('here');\n          if (err) {\n            deferred.reject(err);\n          } else {\n            deferred.resolve(applyResponseTransforms(this.config.transformResponse, res));\n          }\n        });\n      return deferred.promise;\n    }\n  }\n\n  var super_res__assign = super_res__assign || require('object.assign');\n\n  let super_res__superRes = {};\n\n  function generateDefaultActions(url, defaultParams) {\n    let resource = {};\n\n    let action = new ResourceAction(url, defaultParams, super_res__assign({}, actionDefaults));\n    resource.get = action.makeRequest.bind(action);\n    resource.query = resource.get;\n\n    action = new ResourceAction(url, defaultParams, super_res__assign({}, actionDefaults, {method: 'POST'}))\n    resource.save = action.makeRequest.bind(action);\n\n    action = new ResourceAction(url, defaultParams, super_res__assign({}, actionDefaults, {method: 'PUT'}));\n    resource.put = action.makeRequest.bind(action);\n\n    action = new ResourceAction(url, defaultParams, super_res__assign({}, actionDefaults, {method: 'DELETE'}));\n    resource.remove = action.makeRequest.bind(action);\n    resource['delete'] = resource.remove;\n\n    return resource;\n  }\n\n  super_res__superRes.resource = (url, defaultParams, actions) => {\n    let resource = generateDefaultActions(url, defaultParams);\n    if (actions) {\n      Object.getOwnPropertyNames(actions).forEach((name) => {\n        resource[name] = (new ResourceAction(url, defaultParams, actions[name])).makeRequest;\n      });\n    }\n    return resource;\n  };\n\n  super_res__superRes.promiseWrapper = function promiseWrapper(promiseObj) {\n    return (resource) => {\n      let proxiedResource = super_res__assign({}, resource);\n      Object.getOwnPropertyNames(resource).forEach((name) => {\n        let actionFunction = proxiedResource[name];\n        proxiedResource[name] = function (...args) {\n          let promise = actionFunction.apply(proxiedResource, args);\n          //TODO am I swallowing rejected promises here?\n          return promiseObj.when(promise);\n        }\n      });\n      return proxiedResource;\n    }\n  };\n\n  var super_res = super_res__superRes;\n\n  return super_res;\n\n}));\n","var assign = assign || require('object.assign');\n\nimport Q from 'q';\nimport request from 'superagent';\nimport Route from 'route-parser';\n\nimport actionDefaults from './actionDefaults.js';\n\nfunction applyResponseTransforms(transforms, response) {\n  return transforms.reduceRight(function (memo, transform) {\n    return transform(memo, response.header);\n  }, response.body);\n}\n\nfunction applyRequestTransforms(transforms, request, data) {\n  return transforms.reduceRight(function (memo, transform) {\n    return transform(memo, request.header);\n  }, data);\n}\n\nexport default class ResourceAction {\n  constructor(url, defaultParams, action) {\n    this.config = assign({url: url}, actionDefaults, action);\n    this.route = new Route(this.config.url);\n    this.defaultParams = defaultParams;\n  }\n  buildRequest(params, data) {\n    let method = this.config.method.toLowerCase();\n    let currentRequest = request[method === 'delete' ? 'del' : method](this.route.reverse(params));\n\n    currentRequest = currentRequest.accept(this.config.responseType);\n    if (this.config.headers) {\n      currentRequest = currentRequest.set(this.config.headers);\n    }\n\n    if (this.config.timeout) {\n      currentRequest.timeout(this.config.timeout);\n    } else {\n      currentRequest.clearTimeout();\n    }\n\n    if (data && method === 'get') {\n      currentRequest = currentRequest.query(applyRequestTransforms(this.config.transformRequest, currentRequest, data));\n    } else if (data) {\n      currentRequest = currentRequest.send(applyRequestTransforms(this.config.transformRequest, currentRequest, data));\n    }\n\n    return currentRequest;\n  }\n  makeRequest(params, data) {\n    let deferred = Q.defer();\n\n    console.log(request);\n    this.buildRequest(assign({}, this.defaultParams, params), data)\n      .end((err, res) => {\n        console.log('here');\n        if (err) {\n          deferred.reject(err);\n        } else {\n          deferred.resolve(applyResponseTransforms(this.config.transformResponse, res));\n        }\n      });\n    return deferred.promise;\n  }\n}","var assign = assign || require('object.assign');\n\nimport Q from 'q';\n\nimport ResourceAction from './ResourceAction.js';\nimport actionDefaults from './actionDefaults.js';\n\nlet superRes = {};\n\nfunction generateDefaultActions(url, defaultParams) {\n  let resource = {};\n\n  let action = new ResourceAction(url, defaultParams, assign({}, actionDefaults));\n  resource.get = action.makeRequest.bind(action);\n  resource.query = resource.get;\n\n  action = new ResourceAction(url, defaultParams, assign({}, actionDefaults, {method: 'POST'}))\n  resource.save = action.makeRequest.bind(action);\n\n  action = new ResourceAction(url, defaultParams, assign({}, actionDefaults, {method: 'PUT'}));\n  resource.put = action.makeRequest.bind(action);\n\n  action = new ResourceAction(url, defaultParams, assign({}, actionDefaults, {method: 'DELETE'}));\n  resource.remove = action.makeRequest.bind(action);\n  resource['delete'] = resource.remove;\n\n  return resource;\n}\n\nsuperRes.resource = (url, defaultParams, actions) => {\n  let resource = generateDefaultActions(url, defaultParams);\n  if (actions) {\n    Object.getOwnPropertyNames(actions).forEach((name) => {\n      resource[name] = (new ResourceAction(url, defaultParams, actions[name])).makeRequest;\n    });\n  }\n  return resource;\n};\n\nsuperRes.promiseWrapper = function promiseWrapper(promiseObj) {\n  return (resource) => {\n    let proxiedResource = assign({}, resource);\n    Object.getOwnPropertyNames(resource).forEach((name) => {\n      let actionFunction = proxiedResource[name];\n      proxiedResource[name] = function (...args) {\n        let promise = actionFunction.apply(proxiedResource, args);\n        //TODO am I swallowing rejected promises here?\n        return promiseObj.when(promise);\n      }\n    });\n    return proxiedResource;\n  }\n};\n\nexport default superRes;\n","export default actionDefaults = {\n  method: 'GET',\n  responseType: 'json',\n  transformRequest: [],\n  transformResponse: []\n};"],"sourceRoot":"/source/"}