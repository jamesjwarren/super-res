{"version":3,"sources":["super-res.js","src/actionDefaults.js","src/ResourceAction.js","src/super-res.js"],"names":[],"mappings":"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","file":"super-res.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('q'), require('superagent'), require('route-parser'), require('cache-manager')) :\n  typeof define === 'function' && define.amd ? define(['q', 'superagent', 'route-parser', 'cache-manager'], factory) :\n  global.superRes = factory(global.Q, global.superagent, global.Route, global.cacheManager)\n}(this, function (Q, superagent, Route, cacheManager) { 'use strict';\n\n  var actionDefaults = actionDefaults = {\n    method: 'GET',\n    responseType: 'json',\n    transformRequest: [],\n    transformResponse: [],\n    withCredentials: false,\n    cache: null\n  };\n\n  var ResourceAction_js__assign = ResourceAction_js__assign || require('object.assign');\n\n  const cacheDefault = {store: 'memory', max: 100, ttl: 1200};\n\n  function applyResponseTransforms(transforms, response) {\n    return transforms.reduce(function (memo, transform) {\n      return transform(memo, response.header);\n    }, response.body);\n  }\n\n  function applyRequestTransforms(transforms, request, data) {\n    return transforms.reduce(function (memo, transform) {\n      return transform(memo, request.header);\n    }, data);\n  }\n\n  class ResourceAction {\n    constructor(url, defaultParams, action) {\n      this.config = ResourceAction_js__assign({url: url}, actionDefaults, action);\n\n      if((this.config.method.toUpperCase() === 'POST' ||\n        this.config.method.toUpperCase() === 'PUT' ||\n        this.config.method.toUpperCase() === 'PATCH')) {\n        this.canHaveData = true;\n      }\n\n      this.route = new Route(this.config.url);\n      this.defaultParams = {};\n      this.derivedParams = {};\n\n      Object.getOwnPropertyNames(defaultParams)\n        .forEach((paramName) => {\n          let param = defaultParams[paramName];\n          if (typeof param === 'function') {\n            this.derivedParams[paramName] = param;\n          } else if (typeof param === 'string' && param.startsWith('@')) {\n            this.derivedParams[paramName] = param.slice(1);\n          } else {\n            //add to default if it's not an @ or function param\n            this.defaultParams[paramName] = defaultParams[paramName];\n          }\n        });\n\n      if (this.config.cache === true) {\n        this.config.cache = cacheManager.caching(cacheDefault);\n      }\n    }\n    getCacheKey(params, data) {\n      return this.route.reverse(params) + JSON.stringify(data || {});\n    }\n    buildRequest(params, data) {\n      let method = this.config.method.toLowerCase();\n      let currentRequest = superagent[method === 'delete' ? 'del' : method](this.route.reverse(params));\n\n      currentRequest = currentRequest.accept(this.config.responseType);\n      if (this.config.headers) {\n        currentRequest = currentRequest.set(this.config.headers);\n      }\n\n      if (this.config.timeout) {\n        currentRequest.timeout(this.config.timeout);\n      } else {\n        currentRequest.clearTimeout();\n      }\n\n      if (this.config.withCredentials) {\n        currentRequest = currentRequest.withCredentials();\n      }\n\n      if (data) {\n        let transformedData = applyRequestTransforms(this.config.transformRequest, currentRequest, data);\n        if (method === 'get') {\n          currentRequest = currentRequest.query(transformedData);\n        } else {\n          currentRequest = currentRequest.send(transformedData);\n        }\n      }\n\n      return currentRequest;\n    }\n    makeRequest(params, data) {\n      let deferred = Q.defer();\n\n      if(arguments.length === 1 && this.canHaveData) {\n        data = params;\n        params = undefined;\n      }\n\n      let computedParams = {};\n      Object.getOwnPropertyNames(this.derivedParams)\n        .forEach((prop) => {\n            let param = this.derivedParams[prop];\n            if(typeof param === 'function') {\n              computedParams[prop] = param();\n            } else {\n              computedParams[prop] = data[param];\n            }\n        });\n\n      let fullParams = ResourceAction_js__assign({}, this.defaultParams, computedParams, params);\n\n      let doRequest = () => {\n        this.buildRequest(fullParams, data)\n            .end((err, res) => {\n              if (err) {\n                deferred.reject(err);\n              } else {\n                let transformedReponse = applyResponseTransforms(this.config.transformResponse, res);\n\n                if (this.config.cache) {\n                  this.config.cache.set(this.getCacheKey(fullParams, data), transformedReponse);\n                }\n\n                deferred.resolve(transformedReponse);\n              }\n            });\n      };\n\n      if (this.config.cache && this.config.method.toUpperCase() === 'GET') {\n        let key = this.getCacheKey(fullParams, data);\n        this.config.cache.get(key, (err, result) => {\n          if (err) {\n            deferred.reject(err);\n          } else if (result) {\n            deferred.resolve(result);\n          } else {\n            doRequest();\n          }\n        })\n      } else {\n        doRequest();\n      }\n\n      return deferred.promise;\n    }\n  }\n\n  var super_res__assign = super_res__assign || require('object.assign');\n\n  let super_res__superRes = {};\n\n  function generateDefaultActions(url, defaultParams) {\n    let resource = {};\n\n    let action = new ResourceAction(url, defaultParams, super_res__assign({}, actionDefaults));\n    resource.get = action.makeRequest.bind(action);\n    resource.query = resource.get;\n\n    action = new ResourceAction(url, defaultParams, super_res__assign({}, actionDefaults, {method: 'POST'}));\n    resource.save = action.makeRequest.bind(action);\n\n    action = new ResourceAction(url, defaultParams, super_res__assign({}, actionDefaults, {method: 'PUT'}));\n    resource.put = action.makeRequest.bind(action);\n\n    action = new ResourceAction(url, defaultParams, super_res__assign({}, actionDefaults, {method: 'DELETE'}));\n    resource.remove = action.makeRequest.bind(action);\n    resource['delete'] = resource.remove;\n\n    return resource;\n  }\n\n  super_res__superRes.resource = (url, defaultParams, actions) => {\n    let resource = generateDefaultActions(url, defaultParams);\n    if (actions) {\n      Object.getOwnPropertyNames(actions).forEach((name) => {\n        let action = new ResourceAction(url, defaultParams, actions[name]);\n        resource[name] = function (...args) {\n          action.makeRequest(...args);\n        }\n      });\n    }\n    return resource;\n  };\n\n  super_res__superRes.promiseWrapper = function promiseWrapper(wrapperFunc) {\n    return (resource) => {\n      let proxiedResource = super_res__assign({}, resource);\n      Object.getOwnPropertyNames(resource).forEach((name) => {\n        let actionFunction = proxiedResource[name];\n        proxiedResource[name] = function (...args) {\n          let promise = actionFunction.apply(proxiedResource, args);\n          return wrapperFunc(promise);\n        }\n      });\n      return proxiedResource;\n    }\n  };\n\n  var super_res = super_res__superRes;\n\n  return super_res;\n\n}));\n","export default actionDefaults = {\n  method: 'GET',\n  responseType: 'json',\n  transformRequest: [],\n  transformResponse: [],\n  withCredentials: false,\n  cache: null\n};","var assign = assign || require('object.assign');\n\nimport Q from 'q';\nimport request from 'superagent';\nimport Route from 'route-parser';\nimport cacheManager from 'cache-manager';\n\nimport actionDefaults from './actionDefaults.js';\n\nconst cacheDefault = {store: 'memory', max: 100, ttl: 1200};\n\nfunction applyResponseTransforms(transforms, response) {\n  return transforms.reduce(function (memo, transform) {\n    return transform(memo, response.header);\n  }, response.body);\n}\n\nfunction applyRequestTransforms(transforms, request, data) {\n  return transforms.reduce(function (memo, transform) {\n    return transform(memo, request.header);\n  }, data);\n}\n\nexport default class ResourceAction {\n  constructor(url, defaultParams, action) {\n    this.config = assign({url: url}, actionDefaults, action);\n\n    if((this.config.method.toUpperCase() === 'POST' ||\n      this.config.method.toUpperCase() === 'PUT' ||\n      this.config.method.toUpperCase() === 'PATCH')) {\n      this.canHaveData = true;\n    }\n\n    this.route = new Route(this.config.url);\n    this.defaultParams = {};\n    this.derivedParams = {};\n\n    Object.getOwnPropertyNames(defaultParams)\n      .forEach((paramName) => {\n        let param = defaultParams[paramName];\n        if (typeof param === 'function') {\n          this.derivedParams[paramName] = param;\n        } else if (typeof param === 'string' && param.startsWith('@')) {\n          this.derivedParams[paramName] = param.slice(1);\n        } else {\n          //add to default if it's not an @ or function param\n          this.defaultParams[paramName] = defaultParams[paramName];\n        }\n      });\n\n    if (this.config.cache === true) {\n      this.config.cache = cacheManager.caching(cacheDefault);\n    }\n  }\n  getCacheKey(params, data) {\n    return this.route.reverse(params) + JSON.stringify(data || {});\n  }\n  buildRequest(params, data) {\n    let method = this.config.method.toLowerCase();\n    let currentRequest = request[method === 'delete' ? 'del' : method](this.route.reverse(params));\n\n    currentRequest = currentRequest.accept(this.config.responseType);\n    if (this.config.headers) {\n      currentRequest = currentRequest.set(this.config.headers);\n    }\n\n    if (this.config.timeout) {\n      currentRequest.timeout(this.config.timeout);\n    } else {\n      currentRequest.clearTimeout();\n    }\n\n    if (this.config.withCredentials) {\n      currentRequest = currentRequest.withCredentials();\n    }\n\n    if (data) {\n      let transformedData = applyRequestTransforms(this.config.transformRequest, currentRequest, data);\n      if (method === 'get') {\n        currentRequest = currentRequest.query(transformedData);\n      } else {\n        currentRequest = currentRequest.send(transformedData);\n      }\n    }\n\n    return currentRequest;\n  }\n  makeRequest(params, data) {\n    let deferred = Q.defer();\n\n    if(arguments.length === 1 && this.canHaveData) {\n      data = params;\n      params = undefined;\n    }\n\n    let computedParams = {};\n    Object.getOwnPropertyNames(this.derivedParams)\n      .forEach((prop) => {\n          let param = this.derivedParams[prop];\n          if(typeof param === 'function') {\n            computedParams[prop] = param();\n          } else {\n            computedParams[prop] = data[param];\n          }\n      });\n\n    let fullParams = assign({}, this.defaultParams, computedParams, params);\n\n    let doRequest = () => {\n      this.buildRequest(fullParams, data)\n          .end((err, res) => {\n            if (err) {\n              deferred.reject(err);\n            } else {\n              let transformedReponse = applyResponseTransforms(this.config.transformResponse, res);\n\n              if (this.config.cache) {\n                this.config.cache.set(this.getCacheKey(fullParams, data), transformedReponse);\n              }\n\n              deferred.resolve(transformedReponse);\n            }\n          });\n    };\n\n    if (this.config.cache && this.config.method.toUpperCase() === 'GET') {\n      let key = this.getCacheKey(fullParams, data);\n      this.config.cache.get(key, (err, result) => {\n        if (err) {\n          deferred.reject(err);\n        } else if (result) {\n          deferred.resolve(result);\n        } else {\n          doRequest();\n        }\n      })\n    } else {\n      doRequest();\n    }\n\n    return deferred.promise;\n  }\n}","var assign = assign || require('object.assign');\n\nimport Q from 'q';\n\nimport ResourceAction from './ResourceAction.js';\nimport actionDefaults from './actionDefaults.js';\n\nlet superRes = {};\n\nfunction generateDefaultActions(url, defaultParams) {\n  let resource = {};\n\n  let action = new ResourceAction(url, defaultParams, assign({}, actionDefaults));\n  resource.get = action.makeRequest.bind(action);\n  resource.query = resource.get;\n\n  action = new ResourceAction(url, defaultParams, assign({}, actionDefaults, {method: 'POST'}));\n  resource.save = action.makeRequest.bind(action);\n\n  action = new ResourceAction(url, defaultParams, assign({}, actionDefaults, {method: 'PUT'}));\n  resource.put = action.makeRequest.bind(action);\n\n  action = new ResourceAction(url, defaultParams, assign({}, actionDefaults, {method: 'DELETE'}));\n  resource.remove = action.makeRequest.bind(action);\n  resource['delete'] = resource.remove;\n\n  return resource;\n}\n\nsuperRes.resource = (url, defaultParams, actions) => {\n  let resource = generateDefaultActions(url, defaultParams);\n  if (actions) {\n    Object.getOwnPropertyNames(actions).forEach((name) => {\n      let action = new ResourceAction(url, defaultParams, actions[name]);\n      resource[name] = function (...args) {\n        action.makeRequest(...args);\n      }\n    });\n  }\n  return resource;\n};\n\nsuperRes.promiseWrapper = function promiseWrapper(wrapperFunc) {\n  return (resource) => {\n    let proxiedResource = assign({}, resource);\n    Object.getOwnPropertyNames(resource).forEach((name) => {\n      let actionFunction = proxiedResource[name];\n      proxiedResource[name] = function (...args) {\n        let promise = actionFunction.apply(proxiedResource, args);\n        return wrapperFunc(promise);\n      }\n    });\n    return proxiedResource;\n  }\n};\n\nexport default superRes;\n"],"sourceRoot":"/source/"}